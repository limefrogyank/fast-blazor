@inherits FluentInputBase<string?>
<fluent-text-area autofocus="@Autofocus" 
                  appearance="@Appearance.ToAttributeValue()" 
                  resize="@Resize.ToAttributeValue()" 
                  value="@BindConverter.FormatValue(CurrentValue)" 
                  @onchange="@(EventCallback.Factory.CreateBinder<string?>(this, __value => CurrentValueAsString = __value, CurrentValueAsString))"
                  readonly="@Readonly" 
                  disabled="@Disabled" 
                  required="@Required" 
                  placeholder="@Placeholder" 
                  @attributes="AdditionalAttributes">
    @ChildContent
</fluent-text-area>
@code{
    [Parameter] public bool? Disabled { get; set; }

    [Parameter] public bool? Readonly { get; set; }

    [Parameter] public bool? Required { get; set; }

    [Parameter] public bool? Autofocus { get; set; }

    [Parameter] public Resize? Resize { get; set; }

    [Parameter] public Appearance? Appearance { get; set; }

    [Parameter] public string? Placeholder { get; set; }

    [Parameter] public RenderFragment? ChildContent { get; set; }

    protected override bool TryParseValueFromString(string? value, out string? result, [NotNullWhen(false)] out string? validationErrorMessage)
    {
        result = value;
        validationErrorMessage = null;
        return true;
    }
}